Photomath 風格解題系統設計
===================================

一、核心組件
-----------------------------------
1. 方程解析器 (Equation Parser)
   - 輸入：方程式字符串
   - 輸出：結構化數據
   例如：
   "2x + 3 = -x + 8" ->
   {
     left: [
       { type: 'term', coefficient: 2, variable: 'x' },
       { type: 'term', coefficient: 3 }
     ],
     right: [
       { type: 'term', coefficient: -1, variable: 'x' },
       { type: 'term', coefficient: 8 }
     ]
   }

2. 解題引擎 (Solution Engine)
   - 基本運算規則：
     * 移項：變號
     * 合併：同類項相加
     * 係數：等式兩邊同除
   - 解題步驟順序：
     1. 移項（變量到左邊，常數到右邊）
     2. 合併同類項
     3. 求解變量

3. 步驟生成器 (Step Generator)
   每個步驟包含：
   {
     type: '步驟類型',
     before: '操作前的方程式',
     operation: '具體操作說明',
     after: '操作後的方程式',
     highlight: ['需要突出顯示的部分']
   }

二、解題流程
-----------------------------------
1. 解析階段
   - 識別方程類型
   - 提取項和係數
   - 標準化格式

2. 規劃階段
   - 確定解題策略
   - 生成步驟序列
   - 處理特殊情況

3. 執行階段
   - 按步驟執行運算
   - 記錄每步變化
   - 生成解釋文字

4. 展示階段
   - 格式化輸出
   - 標記重要步驟
   - 添加詳細解釋

三、特殊情況處理
-----------------------------------
1. 無解情況
   例如：0x = 5

2. 無限解情況
   例如：0x = 0

3. 係數為0
   例如：0x + 3 = 5

4. 分數/小數係數
   例如：0.5x = 2

四、展示效果
-----------------------------------
1. 視覺層次
   - 主要步驟
   - 詳細解釋
   - 突出顯示
   - 動畫效果

2. 互動功能
   - 步驟展開/收起
   - 前後切換
   - 詳細說明

3. 顏色系統
   - 移項：藍色
   - 合併：綠色
   - 運算：橙色
   - 結果：紫色

五、實現建議
-----------------------------------
1. 模組化設計
   - Parser 模組
   - Solver 模組
   - Renderer 模組

2. 擴展性考慮
   - 支援不同類型方程
   - 自定義解題策略
   - 多語言支援

3. 效能優化
   - 緩存常用模式
   - 延遲加載
   - 步驟預計算

六、後續擴展
-----------------------------------
1. 支援更多方程類型
   - 二元一次方程
   - 二次方程
   - 分數方程

2. 增強功能
   - 圖形化展示
   - 步驟講解
   - 練習生成

3. 使用者體驗
   - 手寫輸入
   - 語音解釋
   - 錯題收集 